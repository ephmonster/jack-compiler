<class>
    <keyword> class </keyword>
    <identifier> Point </identifier>
    <symbol> { </symbol>
    <classVarDec>
        <keyword> field </keyword>
        <keyword> int </keyword>
        <identifier> x </identifier>
        <symbol> , </symbol>
        <identifier> y </identifier>
        <symbol> ; </symbol>
    </classVarDec>
    <classVarDec>
        <keyword> static </keyword>
        <keyword> int </keyword>
        <identifier> pointCount </identifier>
        <symbol> ; </symbol>
    </classVarDec>
    <subroutineDec>
        <keyword> constructor </keyword>
        <identifier> Point </identifier>
        <identifier> new </identifier>
        <symbol> ( </symbol>
        <parameterList>
            <keyword> INT </keyword>
            <identifier> ax </identifier>
            <symbol> , </symbol>
            <keyword> INT </keyword>
            <identifier> ay </identifier>
        </parameterList>
        <symbol> ) </symbol>
        <subroutineBody>
            <symbol> { </symbol>
            <statements>
            </statements>
            <symbol> } </symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword> method </keyword>
        <keyword> int </keyword>
        <identifier> distance </identifier>
        <symbol> ( </symbol>
        <parameterList>
            <identifier> Point </identifier>
            <identifier> other </identifier>
        </parameterList>
        <symbol> ) </symbol>
        <subroutineBody>
            <symbol> { </symbol>
            <statements>
                <ifStatement>
                    <keyword> if </keyword>
                    <symbol> ( </symbol>
                    <expression>
                        <term>
                            <identifier> y </identifier>
                        </term>
                        <symbol> &lt; </symbol>
                        <term>
                            <integerConstant> 3 </integerConstant>
                        </term>
                    </expression>
                    <symbol> ) </symbol>
                    <symbol> { </symbol>
                    <statements>
                        <letStatement>
                            <keyword> let </keyword>
                            <identifier> y </identifier>
                            <symbol> = </symbol>
                            <expression>
                                <term>
                                    <integerConstant> 4 </integerConstant>
                                </term>
                            </expression>
                            <symbol> ; </symbol>
                        </letStatement>
                    </statements>
                    <symbol> } </symbol>
                    <keyword> else </keyword>
                    <symbol> { </symbol>
                    <statements>
                        <letStatement>
                            <keyword> let </keyword>
                            <identifier> y </identifier>
                            <symbol> = </symbol>
                            <expression>
                                <term>
                                    <integerConstant> 5 </integerConstant>
                                </term>
                            </expression>
                            <symbol> ; </symbol>
                        </letStatement>
                    </statements>
                    <symbol> } </symbol>
                </ifStatement>
            </statements>
            <symbol> } </symbol>
        </subroutineBody>
    </subroutineDec>
    <symbol> } </symbol>
</class>
